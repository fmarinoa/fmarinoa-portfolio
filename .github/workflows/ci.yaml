name: CI Pipeline

on:
  pull_request:
    branches: [master, develop]

jobs:
  deploy-preview:
    runs-on: ubuntu-latest

    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      NODE_ENV: preview
      CONTENT_BASE_URL: ${{ secrets.CONTENT_BASE_URL }}

    environment:
      name: Preview

    permissions:
      contents: write
      deployments: write

    outputs:
      deployment-url: ${{ steps.vercel-deploy.outputs.deployment-url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prod

      - name: Build Astro
        run: pnpm run build

      - name: Deploy to Vercel Preview
        id: vercel-deploy
        run: |
          DEPLOYMENT_URL=$(npx vercel deploy --prebuilt --token=$VERCEL_TOKEN --yes --public)
          echo "deployment-url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT

  excute-test:
    needs: deploy-preview
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      CONTENT_BASE_URL: ${{ secrets.CONTENT_BASE_URL }}
      TEST_URL_BASE: ${{ needs.deploy-preview.outputs.deployment-url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: test
          fetch-depth: 1

      - name: Setup Node.js (22)
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm run test

      - name: Upload Playwright report (artifact)
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Prepare test results for Pages
        run: |
          mkdir -p dist/test-results
          cp -r playwright-report/* dist/test-results/

      - name: Upload Pages artifact (test results)
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy-results:
    needs: excute-test
    runs-on: ubuntu-latest
    if: github.event.pull_request.base.ref == 'master'

    permissions:
      pages: write
      id-token: write
      deployments: write
      contents: read

    environment:
      name: test-results
      url: https://fmarinoa.github.io/fmarinoa-portfolio/test-results/

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
