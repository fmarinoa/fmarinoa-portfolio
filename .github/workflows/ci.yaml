name: CI Pipeline

on:
  pull_request:
    branches: [master]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js (22)
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Upload Playwright report (artifact)
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Prepare test results for Pages
        run: |
          mkdir -p dist
          mv playwright-report dist/test-results

      - name: Upload Pages artifact (test results)
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy-results:
    needs: lint-test
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write
      deployments: write
      contents: read

    environment:
      name: test-results
      url: https://fmarinoa.github.io/fmarinoa-portfolio/test-results/

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-preview:
    needs: lint-test
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      NODE_ENV: preview

    environment:
      name: Preview
      url: ${{ steps.vercel_deploy.outputs.preview_url }}

    permissions:
      pages: write
      id-token: write
      deployments: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create GitHub Deployment Preview
        id: create_deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: Preview
          description: Deploy preview to Vercel via CLI
          transient-environment: true
          production-environment: false
          initial-status: pending
          auto-merge: false
          task: deploy

      - name: Deploy to Vercel (Preview)
        id: vercel_deploy
        run: |
          npm install -g vercel
          url=$(vercel --token=$VERCEL_TOKEN --yes | tail -n1)
          echo "preview_url=$url" >> $GITHUB_OUTPUT

      - name: Update deployment preview status
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          deployment-id: ${{ steps.create_deployment.outputs.deployment_id }}
          state: success
          environment-url: ${{ steps.vercel_deploy.outputs.preview_url }}
