---
import { Constants } from '@/data/constants'
import Alert from './Alert.astro'
---

<div
  id="cv-modal"
  class="fixed inset-0 items-center justify-center bg-black/50 z-50 hidden"
>
  <div
    class="bg-gradient-to-br from-gray-800 to-gray-900 border border-indigo-400 transition-all duration-300 p-5 rounded-lg shadow-md max-w-xs text-center"
  >
    <p class="text-white font-medium mb-3">
      Será redirigido a la descarga de mi CV
    </p>
    <div class="flex justify-center gap-2">
      <button
        id="confirm-btn"
        class="px-4 py-2 rounded transition-colors bg-indigo-500 text-white hover:bg-indigo-700"
      >
        De acuerdo
      </button>
      <button
        id="cancel-btn"
        class="px-4 py-2 rounded transition-colors bg-gray-300 text-gray-800 hover:bg-gray-400"
      >
        Cancelar
      </button>
    </div>
  </div>
</div>

<Alert message="¡Gracias por abrir mi CV!" state="success" />

<script define:vars={{ CV_URL: Constants.CV_URL }}>
  const cvModal = document.getElementById('cv-modal')
  const confirmBtn = document.getElementById('confirm-btn')
  const cancelBtn = document.getElementById('cancel-btn')
  const alert = document.getElementById('alert')

  cancelBtn?.addEventListener('click', () => {
    cvModal?.classList.add('hidden')
  })

  confirmBtn?.addEventListener('click', () => {
    cvModal?.classList.add('hidden')
    window.open(CV_URL, '_blank', 'noopener,noreferrer')

    // Mostrar alert
    alert?.classList.remove('hidden')
    setTimeout(() => {
      alert?.classList.add('hidden')
    }, 3000)
  })

  // Cerrar modal al hacer clic fuera
  cvModal?.addEventListener('click', e => {
    if (e.target === cvModal) {
      cvModal.classList.add('hidden')
    }
  })
</script>
